service: ms-${self:custom.serviceName}
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: 'us-east-1'
  memorySize: 512
  apiGateway:
    restApiId: 411z282v69
    restApiRootResourceId: 4efcqfttn0
    restApiResources:
      v1: cmuvzg
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:CreateTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${aws:region}:${aws:accountId}:*'

custom:
  serviceName: products
  contextPath: ${self:custom.serviceName}
  baseApi: ${self:custom.contextPath}
  funcDir: src/4-framework/functions
  ms-account-authorizer:
    type: TOKEN
    authorizerId: ${ssm:/alumnus/ms-auth/authorizer-id}
functions:
  createProduct:
    handler: ${self:custom.funcDir}/createProduct.handler
    events:
      - http:
          path: ${self:custom.baseApi}/
          method: post
          authorizer: ${self:custom.ms-account-authorizer}
          cors:
            origin: '*'
            headers: '*'
  viewProduct:
    handler: ${self:custom.funcDir}/viewProduct.handler
    events:
      - http:
          path: ${self:custom.baseApi}/{productId}
          method: get
          authorizer: ${self:custom.ms-account-authorizer}
          cors:
            origin: '*'
            headers: '*'
  viewAllProduct:
    handler: ${self:custom.funcDir}/viewAllProduct.handler
    events:
      - http:
          path: ${self:custom.baseApi}/
          method: get
          authorizer: ${self:custom.ms-account-authorizer}
          cors:
            origin: '*'
            headers: '*'
  removeProduct:
    handler: ${self:custom.funcDir}/removeProduct.handler
    events:
      - http:
          path: ${self:custom.baseApi}
          method: delete
          authorizer: ${self:custom.ms-account-authorizer}
          cors:
            origin: '*'
            headers: '*'
  updateProduct:
    handler: ${self:custom.funcDir}/updateProduct.handler
    events:
      - http:
          path: ${self:custom.baseApi}
          method: put
          authorizer: ${self:custom.ms-account-authorizer}
          cors:
            origin: '*'
            headers: '*'

plugins:
  - serverless-esbuild
  - serverless-offline
